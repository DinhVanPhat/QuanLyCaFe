/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.cafe.form;

import com.cafe.dao.NhanVienDAO;
import com.cafe.model.NhanVien;
import com.cafe.utils.Auth;
import com.cafe.utils.MsgBox;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class DangNhapJDialog extends javax.swing.JDialog {

    /**
     * Creates new form DangNhap2
     */
    public DangNhapJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension screenSize = toolkit.getScreenSize();

        int screenWidth = screenSize.width;
        int screenHeight = screenSize.height;

        this.setSize(screenWidth, screenHeight - 50);

        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbLogo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        btnDangNhap = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        txtMatKhau = new javax.swing.JPasswordField();
        chkLuuMatKhau = new javax.swing.JCheckBox();
        lblQuenMatKhau = new javax.swing.JLabel();
        pnKetNoi = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        txtMayChu = new javax.swing.JTextField();
        btnKetNoi = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(230, 213, 193));
        jPanel1.setPreferredSize(new java.awt.Dimension(1536, 864));

        jPanel2.setBackground(new java.awt.Color(235, 225, 213));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setPreferredSize(new java.awt.Dimension(550, 350));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(97, 67, 67));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ĐĂNG NHẬP");

        lbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/logo.png"))); // NOI18N
        lbLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLogoMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(97, 67, 67));
        jLabel3.setText("Tài Khoản");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(97, 67, 67));
        jLabel5.setText("Mật Khẩu");

        txtTaiKhoan.setBackground(new java.awt.Color(235, 225, 213));
        txtTaiKhoan.setForeground(new java.awt.Color(0, 0, 0));
        txtTaiKhoan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btnDangNhap.setBackground(new java.awt.Color(191, 158, 117));
        btnDangNhap.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnDangNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnDangNhap.setText("Đăng Nhập");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(191, 158, 117));
        btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnThoat.setForeground(new java.awt.Color(255, 255, 255));
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        txtMatKhau.setBackground(new java.awt.Color(235, 225, 213));
        txtMatKhau.setForeground(new java.awt.Color(0, 0, 0));
        txtMatKhau.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        chkLuuMatKhau.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chkLuuMatKhau.setForeground(new java.awt.Color(97, 67, 67));
        chkLuuMatKhau.setText("Lưu mật khẩu");

        lblQuenMatKhau.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblQuenMatKhau.setForeground(new java.awt.Color(0, 5, 125));
        lblQuenMatKhau.setText("Quên mật khẩu?");
        lblQuenMatKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQuenMatKhauMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMatKhau)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(chkLuuMatKhau)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblQuenMatKhau)))
                        .addGap(0, 32, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkLuuMatKhau)
                            .addComponent(lblQuenMatKhau))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pnKetNoi.setBackground(new java.awt.Color(235, 225, 213));
        pnKetNoi.setPreferredSize(new java.awt.Dimension(0, 200));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(97, 67, 67));
        jLabel4.setText("Máy Chủ");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(97, 67, 67));
        jLabel6.setText("Database");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        txtDatabase.setBackground(new java.awt.Color(235, 225, 213));
        txtDatabase.setForeground(new java.awt.Color(0, 0, 0));
        txtDatabase.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtMayChu.setBackground(new java.awt.Color(235, 225, 213));
        txtMayChu.setForeground(new java.awt.Color(0, 0, 0));
        txtMayChu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btnKetNoi.setBackground(new java.awt.Color(191, 158, 117));
        btnKetNoi.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnKetNoi.setForeground(new java.awt.Color(255, 255, 255));
        btnKetNoi.setText("Kết Nối");
        btnKetNoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKetNoiActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnKetNoiLayout = new javax.swing.GroupLayout(pnKetNoi);
        pnKetNoi.setLayout(pnKetNoiLayout);
        pnKetNoiLayout.setHorizontalGroup(
            pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnKetNoiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnKetNoi, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnKetNoiLayout.createSequentialGroup()
                        .addGroup(pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMayChu, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(93, 93, 93))
            .addComponent(jSeparator1)
        );
        pnKetNoiLayout.setVerticalGroup(
            pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKetNoiLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMayChu, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGroup(pnKetNoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnKetNoiLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnKetNoiLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnKetNoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(493, 493, 493)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnKetNoi, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
                .addGap(493, 493, 493))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnKetNoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKetNoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKetNoiActionPerformed
        if (checkValidateFormKetNoi()) {
            luuThongTinKetNoi();
        }
    }//GEN-LAST:event_btnKetNoiActionPerformed

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        dangNhap();
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        ketThuc();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void lbLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoMouseClicked
        clickLogo();
    }//GEN-LAST:event_lbLogoMouseClicked

    private void lblQuenMatKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQuenMatKhauMouseClicked
        new QuenMatKhauJDialog(null, true).setVisible(true);
    }//GEN-LAST:event_lblQuenMatKhauMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DangNhapJDialog dialog = new DangNhapJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnKetNoi;
    private javax.swing.JButton btnThoat;
    private javax.swing.JCheckBox chkLuuMatKhau;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lblQuenMatKhau;
    private javax.swing.JPanel pnKetNoi;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtMayChu;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables
    NhanVienDAO dao = new NhanVienDAO();
    int row = - 1;
    String fileName;
    boolean checkLMK;

    private void init() {
        checkLMK = false;
        fileName = "C:\\Users\\NGHIA\\Documents\\HOC KY 4\\Du an 1 - PRO1041\\QuanLyCaFe\\BrotherCafe\\src\\com\\cafe\\connect\\thongtin.txt";
        this.docLuuMK();
        this.docthongTin();
        pnKetNoi.setVisible(false);
    }

    boolean checkValidateForm() {
        if (txtTaiKhoan.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập tài khoản", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        String matKhau = new String(txtMatKhau.getPassword());
        if (matKhau.isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập mât khẩu", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    boolean checkValidateFormKetNoi() {
        if (txtMayChu.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập máy chủ", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtDatabase.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập database", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    void dangNhap() {
        if (checkValidateForm()) {
            String manv = txtTaiKhoan.getText();
            String matKhau = new String(txtMatKhau.getPassword());
            NhanVien tk = dao.selectById(manv);
            List<String> list = readLinesFromFile(fileName);

            if (chkLuuMatKhau.isSelected()) {
                checkLMK = true;
            } else {
                checkLMK = false;
            }
            if (checkLMK == true) {
                if (matKhau.equals(tk.getMatKhau()) || maHoaMatKhauMD5(matKhau).equals(tk.getMatKhau())) {
                    if (!chkLuuMatKhau.isSelected()) {
                        if (list.size() > 2) {
                            xoaTKMKTrongFile();
                        }
                    }
                    if (list.size() > 2) {
                        xoaTKMKTrongFile();
                    }
                    LuuMatKhau();
                    Auth.user = tk;
                    this.dispose();
                } else {
                    MsgBox.alert(this, "Tài khoản hoặc mật khẩu không đúng 1", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                if (tk == null) {
                    MsgBox.alert(this, "Tài khoản hoặc mật khẩu không đúng 2", JOptionPane.WARNING_MESSAGE);
                } else if (maHoaMatKhauMD5(matKhau).equals(tk.getMatKhau()) || matKhau.equals(tk.getMatKhau())) {
                    if (list.size() > 2) {
                        xoaTKMKTrongFile();
                    }
                    Auth.user = tk;
                    this.dispose();
                } else {
                    MsgBox.alert(this, "Tài khoản hoặc mật khẩu không đúng 3", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }

    public static String maHoaMatKhauMD5(String password) {
        try {
            // Tạo đối tượng MessageDigest với thuật toán MD5
            MessageDigest md = MessageDigest.getInstance("MD5");

            // Cập nhật message digest với byte của mật khẩu
            md.update(password.getBytes());

            // Lấy bản băm (digest) từ message digest
            byte[] byteData = md.digest();

            // Chuyển đổi byte thành định dạng hex
            StringBuilder hexString = new StringBuilder();
            for (byte b : byteData) {
                hexString.append(String.format("%02x", b));
            }

            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }

    void ketThuc() {
        if (MsgBox.confirm(this, "Bạn muốn thoát ứng dụng?")) {
            System.exit(0);
        }
    }

    private void clickLogo() {
        if (row == -1) {
            pnKetNoi.setVisible(true);
            row = 1;
        } else if (row == 1) {
            pnKetNoi.setVisible(false);
            row = -1;
        }
    }

    private void luuThongTinKetNoi() {
        List<String> list = new ArrayList<>();
        String maychu = txtMayChu.getText();
        String database = txtDatabase.getText();

        list.add(maychu);
        list.add(database);

        writeLinesToFile(fileName, list);
    }

    private void LuuMatKhau() {
        List<String> listMk = readLinesFromFile(fileName);
        String taiKhoan = txtTaiKhoan.getText();

        listMk.add(taiKhoan);

        String matKhau;
        NhanVien nv = dao.selectById(taiKhoan);
        if ((new String(txtMatKhau.getPassword())).equals(nv.getMatKhau())) {
            matKhau = nv.getMatKhau();
        } else {
            matKhau = maHoaMatKhauMD5(new String(txtMatKhau.getPassword()));
        }

        listMk.add(matKhau);

        writeLinesToFile(fileName, listMk);
    }

    private void docLuuMK() {
        List<String> list = readLinesFromFile(fileName);
        if (list.size() > 2) {
            for (int i = 0; i < list.size(); i++) {
                if (i == 2) {
                    txtTaiKhoan.setText(list.get(i));
                } else if (i == 3) {
                    txtMatKhau.setText(list.get(i));
                }
            }
            chkLuuMatKhau.setSelected(true);
            checkLMK = true;
        }
    }

    private void docthongTin() {
        List<String> list = readLinesFromFile(fileName);
        File file = new File(fileName);
        if (file.length() != 0) {
            for (int i = 0; i < list.size(); i++) {
                if (i == 0) {
                    txtMayChu.setText(list.get(i));
                } else if (i == 1) {
                    txtDatabase.setText(list.get(i));
                }
            }
        }
    }

    // Đọc dữ liệu từ file
    private static List<String> readLinesFromFile(String filePath) {
        List<String> list = new ArrayList<>();
        try {
            FileReader fr = new FileReader(filePath);
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                list.add(line);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return list;
    }

    //Ghi dư liệu vào file
    private static void writeLinesToFile(String filePath, List<String> list) {
        try {
            FileWriter fw = new FileWriter(filePath);
            BufferedWriter bw = new BufferedWriter(fw);
            for (String line : list) {
                bw.write(line);
                bw.newLine();
            }
            bw.flush();
            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Xóa từng dòng trong file 
    private void removeLines(List<String> list, int lineIndex1, int lineIndex2) {
        list.remove(lineIndex1);
        list.remove(lineIndex2 - 1);
    }

    private void xoaTKMKTrongFile() {
        // Đọc nội dung từ file 
        List<String> lines = readLinesFromFile(fileName);

        // Xóa dòng chứ tài khoản và mật khẩu, dòng 3 và 4
        removeLines(lines, 2, 3);

        // Ghi nội dung và file từ danh sách đã xóa 
        writeLinesToFile(fileName, lines);
    }

}
