/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.cafe.form;

import com.cafe.dao.BanDAO;
import com.cafe.dao.ChiTietHoaDonDAO;
import com.cafe.dao.HoaDonDAO;
import com.cafe.dao.KhuVucDAO;
import com.cafe.dao.SanPhamDAO;
import com.cafe.model.Ban;
import com.cafe.model.ChiTietHoaDon;
import com.cafe.model.HoaDon;
import com.cafe.model.KhuVuc;
import com.cafe.model.SanPham;
import com.cafe.utils.Auth;
import com.cafe.utils.MsgBox;
import com.cafe.utils.XDate;
import com.cafe.utils.XImage;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.border.StrokeBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NGHIA
 */
public class TrangChuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TrangChu
     */
    public TrangChuJPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblBan = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblGioiDen = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnOrder = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        pnCenter = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnChuyenBan = new javax.swing.JButton();
        btnGopBan = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnDatLaiTrangThaiBan = new javax.swing.JButton();

        setBackground(new java.awt.Color(230, 213, 193));
        setPreferredSize(new java.awt.Dimension(1536, 864));
        setLayout(new java.awt.BorderLayout(10, 0));

        jPanel4.setBackground(new java.awt.Color(191, 158, 117));
        jPanel4.setPreferredSize(new java.awt.Dimension(390, 864));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Số lượng", "Giá", "Tổng tiền SP"
            }
        ));
        tblHoaDon.setFocusable(false);
        tblHoaDon.setOpaque(false);
        jScrollPane1.setViewportView(tblHoaDon);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Bàn:");

        lblBan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblBan.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Trạng thái:");

        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Giờ đến:");

        lblGioiDen.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Tổng tiền:");

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblBan, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblGioiDen, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblGioiDen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(165, 138, 104));

        btnOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/list.png"))); // NOI18N
        btnOrder.setText("Order");
        btnOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOrder.setPreferredSize(new java.awt.Dimension(100, 23));
        btnOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/cashregister.png"))); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThanhToan.setPreferredSize(new java.awt.Dimension(88, 23));
        btnThanhToan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(btnOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(jPanel4, java.awt.BorderLayout.LINE_END);

        pnCenter.setBackground(new java.awt.Color(230, 213, 193));
        pnCenter.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(217, 189, 156));
        jPanel6.setPreferredSize(new java.awt.Dimension(730, 80));

        btnChuyenBan.setBackground(new java.awt.Color(255, 255, 255));
        btnChuyenBan.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnChuyenBan.setForeground(new java.awt.Color(97, 67, 67));
        btnChuyenBan.setText("Chuyển bàn");
        btnChuyenBan.setPreferredSize(new java.awt.Dimension(180, 50));
        btnChuyenBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChuyenBanActionPerformed(evt);
            }
        });

        btnGopBan.setBackground(new java.awt.Color(255, 255, 255));
        btnGopBan.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnGopBan.setForeground(new java.awt.Color(97, 67, 67));
        btnGopBan.setText("Gộp bàn");
        btnGopBan.setPreferredSize(new java.awt.Dimension(180, 50));
        btnGopBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGopBanActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(97, 67, 67));
        jButton5.setText("Đặt bàn");
        jButton5.setPreferredSize(new java.awt.Dimension(180, 50));

        btnDatLaiTrangThaiBan.setBackground(new java.awt.Color(255, 255, 255));
        btnDatLaiTrangThaiBan.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnDatLaiTrangThaiBan.setForeground(new java.awt.Color(97, 67, 67));
        btnDatLaiTrangThaiBan.setText("Đặt lại trạng thái bàn");
        btnDatLaiTrangThaiBan.setPreferredSize(new java.awt.Dimension(180, 50));
        btnDatLaiTrangThaiBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatLaiTrangThaiBanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnChuyenBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGopBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDatLaiTrangThaiBan, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChuyenBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGopBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDatLaiTrangThaiBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnCenter.add(jPanel6, java.awt.BorderLayout.PAGE_END);

        add(pnCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        OrDerSP();
    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnDatLaiTrangThaiBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatLaiTrangThaiBanActionPerformed
        DatLaiTrangThaiBan();
    }//GEN-LAST:event_btnDatLaiTrangThaiBanActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        thanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnChuyenBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChuyenBanActionPerformed
        chonChuyenBan();
    }//GEN-LAST:event_btnChuyenBanActionPerformed

    private void btnGopBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGopBanActionPerformed
        chonGopBan();
    }//GEN-LAST:event_btnGopBanActionPerformed
    private void btnKhuVucActionPerformed(java.awt.event.ActionEvent evt) {
        String src = evt.getActionCommand();
        pn_MenuKV.setVisible(false);
        fillBan(src);

        //MsgBox.alert(null, src, JOptionPane.WARNING_MESSAGE);
    }

    private void lblMenuSPMouseClicked(java.awt.event.MouseEvent evt) {
        String text = lblMenuSP.getText();
        int dau = text.indexOf(":");
        int cuoi = text.indexOf("<br>");
        tenSP = text.substring(dau + 10, cuoi);
        clickVaoSP();
    }

    private void lblBanTrongKhuVucMouseClicked(java.awt.event.MouseEvent evt) {
        String text = lblKhuVucBan.getText();
        int dau = text.indexOf(":");
        int cuoi = text.indexOf("<br>");
        tenBan = text.substring(dau + 10, cuoi);
        fillTabel();
        clickBan();
    }

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {
        dgChonSL.setVisible(false);
    }

    private void btnOKChonSoLuongActionPerformed(java.awt.event.ActionEvent evt) {
        fillTableKhiOrder();
        updateBanKhiOrderVaTT();
        OrderChonSL();
        checkFillDuoiTable = true;
        clickBan();
        dgChonSL.setVisible(false);
        checkTableRong = false;
    }

    private void btnOkChuyenBanActionPerformed(java.awt.event.ActionEvent evt) {
        chuyenBanNhanOk();
        dgChuyenBan.setVisible(false);
    }
    private void btnOkGopBanActionPerformed(java.awt.event.ActionEvent evt) {
        gopBanNhanOK();
        dgGopBan.setVisible(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChuyenBan;
    private javax.swing.JButton btnDatLaiTrangThaiBan;
    private javax.swing.JButton btnGopBan;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBan;
    private javax.swing.JLabel lblGioiDen;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JPanel pnCenter;
    private javax.swing.JTable tblHoaDon;
    // End of variables declaration//GEN-END:variables
    private JPanel pn_MenuSP;
    private JPanel pn_Menu;
    private JPanel pn_MenuKV;
    private JPanel pn_KhuVuc;
    private JButton btnKhuVuc;
    private JLabel JlabelMenuSP;
    private JLabel JLabelKhuVuc;
    private JLabel lblMenuSP;
    private JLabel lblKhuVucBan;
    private JButton btnOkChonSoLuong;
    private JButton btnHuyChonSoLuong;
    private JDialog dgChonSL;
    private JTextField txtGhiChu;
    private JTextField txtSoLuong;
    private JDialog dgChuyenBan;
    private JComboBox cboChuyenBan;
    private JButton btnOkChuyenBan;
    private JButton btnHuyChuyenBan;
    private JDialog dgGopBan;
    private JComboBox cboGopBan;
    private JButton btnOkGopBan;
    private JButton btnHuyGopBan;

    KhuVucDAO kvdao = new KhuVucDAO();
    SanPhamDAO spdao = new SanPhamDAO();
    BanDAO bdao = new BanDAO();
    HoaDonDAO hddao = new HoaDonDAO();
    ChiTietHoaDonDAO cthddao = new ChiTietHoaDonDAO();

    List<KhuVuc> listKV = kvdao.selectAll();
    List<SanPham> listSP = spdao.selectAll();
    List<Ban> listBan = bdao.selectAll();
    List<ChiTietHoaDon> listCTHD;

    List<JLabel> JlabelMenuSPs = new ArrayList<>();
    List<JLabel> JlabelKhuVucs = new ArrayList<>();
    int clickOrder = -1;
    int index;
    int idHD = -1;
    int thoiGianTT = -1;
    String tenBan = null;
    String tenSP = null;
    boolean checkFillDuoiTable = true;
    boolean checkTableRong = false;

    private void init() {
        giaoDienChinh();

    }

    public void giaoDienChinh() {
        pn_KhuVuc = new JPanel(null);
        pn_KhuVuc.setPreferredSize(new Dimension(getWidth(), 80));
        pn_KhuVuc.setBackground(new Color(217, 189, 156));

        //JScrollPane sp_KhuVuc = new JScrollPane(pn_KhuVuc, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        pn_Menu = new JPanel();
        pn_Menu.setSize(getWidth(), 764);
        pn_Menu.setBackground(new Color(230, 213, 193));

        pnCenter.add(pn_KhuVuc, BorderLayout.NORTH);

        pn_MenuSP = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 15));
        pn_MenuSP.setPreferredSize(new Dimension(getWidth(), 864));
        pn_MenuSP.setSize(getWidth(), 864);
        pn_MenuSP.setBackground(new Color(230, 213, 193));

        pnCenter.add(pn_MenuSP, BorderLayout.CENTER);
        pn_MenuSP.setVisible(false);

        pn_MenuKV = new JPanel(new FlowLayout(FlowLayout.LEADING, 10, 10));
        pn_MenuKV.setPreferredSize(new Dimension(200, 864));
        pn_MenuKV.setSize(200, 864);
        pn_MenuKV.setBackground(new Color(230, 213, 193));

        // Thêm button trên thanh khu vực
        int xKhuVuc = 15;
        int yKhuVuc = 15;

        for (KhuVuc kv : listKV) {
            btnKhuVuc = new JButton(kv.getTenKV());
            btnKhuVuc.setLocation(xKhuVuc, yKhuVuc);
            xKhuVuc = xKhuVuc + 145;
            btnKhuVuc.setPreferredSize(new Dimension(130, 50));
            btnKhuVuc.setSize(130, 50);
            btnKhuVuc.setBackground(new Color(255, 255, 255));
            btnKhuVuc.setForeground(new Color(97, 67, 67));
            btnKhuVuc.setFont(new Font("Segoe UI", Font.BOLD, 16));
            btnKhuVuc.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    btnKhuVucActionPerformed(e);
                }
            });

            pn_KhuVuc.add(btnKhuVuc);
        }

        DecimalFormat formatTienVND = new DecimalFormat("###,###.###");
        //Thêm sản phẩm trong giao diện chính
        int xSP = 40;
        int ySP = 40;
        for (SanPham sp : listSP) {
            ImageIcon imageIcon = XImage.read(sp.getHinhAnh());
            Image resizedImage = imageIcon.getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH);
            imageIcon.setImage(resizedImage);
            String ten = "<html><pstyle='text-align:center;'>" + sp.getTenSP() + " <br>" + formatTienVND.format(sp.getGia()) + " VNĐ" + "</p></html>";
            JlabelMenuSP = new JLabel(ten, imageIcon, JLabel.CENTER);
            JlabelMenuSP.setBackground(new Color(230, 213, 193));
            JlabelMenuSP.setOpaque(true);
            JlabelMenuSP.setPreferredSize(new Dimension(110, 100));
            JlabelMenuSP.setSize(110, 100);
            JlabelMenuSP.setHorizontalTextPosition(SwingConstants.CENTER);
            JlabelMenuSP.setHorizontalAlignment(SwingConstants.CENTER);
            JlabelMenuSP.setVerticalAlignment(SwingConstants.CENTER);
            JlabelMenuSP.setVerticalTextPosition(SwingConstants.BOTTOM);
            JlabelMenuSP.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    lblMenuSP = (JLabel) evt.getSource();
                    index = JlabelMenuSPs.indexOf(lblMenuSP);
                    lblMenuSPMouseClicked(evt);
                }
            });
            pn_MenuSP.add(JlabelMenuSP);
        }
        String list = "";
        for (KhuVuc khuVuc : listKV) {
            list = khuVuc.getTenKV();
            break;
        }
        if (list != null) {
            fillBan(list);
        }

    }

    public void fillBan(String keyWord) {
        for (Ban b : listBan) {
            if (!b.getKhuVuc().equals(keyWord)) {
                pn_MenuKV.removeAll();
            }
        }
        List<KhuVuc> list = kvdao.selectByKeyWord(keyWord);
        List<Ban> listB = null;
        for (KhuVuc khuVuc : list) {
            listB = bdao.selectByKeyWord(khuVuc.getMaKV());
        }
        if (listB != null) {
            for (Ban ban : listB) {
                ImageIcon imageIcon;
                if (ban.getTrangThai().equals("Trống")) {
                    imageIcon = XImage.read("table-trong.png");
                } else if (ban.getTrangThai().equalsIgnoreCase("Có khách")) {
                    imageIcon = XImage.read("table-cokhach.png");
                } else {
                    imageIcon = XImage.read("table-dadat.png");
                }

                Image resizedImage = imageIcon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
                imageIcon.setImage(resizedImage);

                String ten = "<html> <p style='text-align:center;'>" + ban.getTenBan() + "<br>" + ban.getTrangThai() + "</p></html>";
                JLabelKhuVuc = new JLabel(ten, imageIcon, JLabel.CENTER);
                JLabelKhuVuc.setPreferredSize(new Dimension(120, 110));
                JLabelKhuVuc.setSize(120, 110);
                JLabelKhuVuc.setBackground(new Color(230, 213, 193));
                JLabelKhuVuc.setFont(new Font("Roboto", Font.PLAIN, 13));
                JLabelKhuVuc.setHorizontalTextPosition(SwingConstants.CENTER);
                JLabelKhuVuc.setHorizontalAlignment(SwingConstants.CENTER);
                JLabelKhuVuc.setVerticalAlignment(SwingConstants.CENTER);
                JLabelKhuVuc.setVerticalTextPosition(SwingConstants.BOTTOM);
                JLabelKhuVuc.addMouseListener(new java.awt.event.MouseAdapter() {

                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        lblKhuVucBan = (JLabel) evt.getSource();
                        index = JlabelKhuVucs.indexOf(lblKhuVucBan);
                        lblBanTrongKhuVucMouseClicked(evt);
                    }
                });
                pn_MenuKV.add(JLabelKhuVuc);
            }
            pnCenter.add(pn_MenuKV, BorderLayout.CENTER);
            pn_MenuKV.setVisible(true);
        }

    }

    public void clickBan() {
        List<Ban> listBan = bdao.selectByTenBan(tenBan);
        for (Ban ban : listBan) {
            List<HoaDon> listHD = hddao.selectByMaBan(ban.getMaBan());
            lblBan.setText(ban.getTenBan());
            lblTrangThai.setText(ban.getTrangThai());
            if (checkFillDuoiTable) {
                for (HoaDon hd : listHD) {
                    String gioDen = hd.getThoiGianTaoHD();
                    String gioiDenFormatTime = gioDen.substring(0, 8);
                    lblGioiDen.setText(gioiDenFormatTime);
                    lblTongTien.setText(tongTienTuTableKhiChonSP() + "");
                }
            } else {
                lblGioiDen.setText("");
                lblTongTien.setText("0 VNĐ");
            }
        }
    }

    public void fillTabel() {
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        List<HoaDon> listHD = hddao.selectByMaBan(b.getMaBan());
        if (b.getTrangThai().equals("Có khách")) {
            for (HoaDon hd : listHD) {
                DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
                model.setRowCount(0);
                List<ChiTietHoaDon> cthdList = cthddao.selectByMaHD(hd.getMaHD());
                for (ChiTietHoaDon cthd : cthdList) {
                    SanPham sp = spdao.selectByMaSPTraVeTenSP(cthd.getMaSP());
                    model.addRow(new Object[]{cthd.getMaSP(), sp.getTenSP(), cthd.getSoLuong(), sp.getGia(), cthd.getSoLuong() * sp.getGia()});
                }
                checkFillDuoiTable = true;
            }
        } else if (b.getTrangThai().equals("Trống")) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            checkFillDuoiTable = false;
        }
    }

    public void DatLaiTrangThaiBan() {
        Ban b = updateBanTrong();
        try {
            bdao.update(b);
            fillTabel();
            clickBan();
            pn_MenuKV.removeAll();
            fillBan(b.getKhuVuc());
            // MsgBox.alert(this, "Đặt lại trạng thái bàn thành công", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            //MsgBox.alert(this, "Đặt lại trạng thái bàn thất bại", JOptionPane.WARNING_MESSAGE);
        }
    }

    public Ban updateBanTrong() {
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        Ban bnew = new Ban();
        bnew.setMaBan(b.getMaBan());
        bnew.setKhuVuc(b.getKhuVuc());
        bnew.setTenBan(b.getTenBan());
        bnew.setTrangThai("Trống");
        return bnew;
    }

    public void OrDerSP() {
        if (tenBan == null) {
            MsgBox.alert(null, "Vui lòng chọn bàn", JOptionPane.WARNING_MESSAGE);
        } else {
            if (clickOrder == -1) {
                this.add(pn_MenuSP, BorderLayout.CENTER);
                pnCenter.setVisible(false);
                pn_MenuSP.setVisible(true);
                clickOrder = 1;
                Ban b = bdao.selectByTenBanTraVeBan(tenBan);
                if (b.getTrangThai().equals("Trống")) {
                    listCTHD = new ArrayList<>();
                } else {
                    listCTHD = cthddao.selectByMaBan(b.getMaBan());
                }

            } else if (clickOrder == 1) {
                pnCenter.setVisible(true);
                pn_MenuSP.setVisible(false);
                clickOrder = -1;
            }
        }
        if (tblHoaDon.getRowCount() == 0) {
            checkTableRong = true;
        } else {
            checkTableRong = false;
        }
    }

    private void clickVaoSP() {

        dgChonSL = new JDialog();
        dgChonSL.setUndecorated(true);
        dgChonSL.setPreferredSize(new Dimension(500, 250));
        dgChonSL.setSize(500, 250);

        JPanel pannel = new JPanel();
        pannel.setLayout(null);
        pannel.setPreferredSize(new Dimension(500, 250));
        pannel.setSize(500, 250);
        pannel.setBackground(Color.WHITE);

        JLabel jLabelSL = new JLabel("Số lượng:");
        jLabelSL.setPreferredSize(new Dimension(90, 35));
        jLabelSL.setSize(90, 40);
        jLabelSL.setFont(new Font("Roboto", Font.PLAIN, 20));
        jLabelSL.setForeground(new Color(0, 0, 0));
        jLabelSL.setLocation(30, 40);

        JLabel jLabelGC = new JLabel("Ghi chú:");
        jLabelGC.setPreferredSize(new Dimension(90, 35));
        jLabelGC.setSize(90, 40);
        jLabelGC.setFont(new Font("Roboto", Font.PLAIN, 20));
        jLabelGC.setForeground(new Color(0, 0, 0));
        jLabelGC.setLocation(30, 88);

        txtSoLuong = new JTextField();
        txtSoLuong.setPreferredSize(new Dimension(340, 40));
        txtSoLuong.setBackground(new Color(227, 188, 140));
        txtSoLuong.setOpaque(true);
        txtSoLuong.setSize(340, 40);
        txtSoLuong.setLocation(120, 40);
        txtSoLuong.setBorder(null);

        txtGhiChu = new JTextField();
        txtGhiChu.setPreferredSize(new Dimension(340, 40));
        txtGhiChu.setBackground(new Color(227, 188, 140));
        txtGhiChu.setOpaque(true);
        txtGhiChu.setSize(340, 40);
        txtGhiChu.setLocation(120, 90);
        txtGhiChu.setBorder(null);

        btnOkChonSoLuong = new JButton("OK");
        btnOkChonSoLuong.setPreferredSize(new Dimension(150, 40));
        btnOkChonSoLuong.setSize(150, 40);
        btnOkChonSoLuong.setBackground(new Color(191, 158, 117));
        btnOkChonSoLuong.setFont(new Font("Roboto", Font.BOLD, 20));
        btnOkChonSoLuong.setForeground(new Color(255, 255, 255));
        btnOkChonSoLuong.setLocation(95, 160);
        btnOkChonSoLuong.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnOKChonSoLuongActionPerformed(e);
            }
        });

        btnHuyChonSoLuong = new JButton("Hủy");
        btnHuyChonSoLuong.setPreferredSize(new Dimension(150, 40));
        btnHuyChonSoLuong.setSize(150, 40);
        btnHuyChonSoLuong.setBackground(new Color(191, 158, 117));
        btnHuyChonSoLuong.setFont(new Font("Roboto", Font.BOLD, 20));
        btnHuyChonSoLuong.setForeground(new Color(255, 255, 255));
        btnHuyChonSoLuong.setLocation(255, 160);
        btnHuyChonSoLuong.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnHuyActionPerformed(e);
            }
        });

        pannel.add(jLabelSL);
        pannel.add(txtSoLuong);
        pannel.add(jLabelGC);
        pannel.add(txtGhiChu);
        pannel.add(btnOkChonSoLuong);
        pannel.add(btnHuyChonSoLuong);
        dgChonSL.add(pannel);
        dgChonSL.setVisible(true);
        dgChonSL.setLocationRelativeTo(null);
    }

    private void OrderChonSL() {
        SanPham sp = spdao.selectByTenSPTraveMaSP(tenSP);
        HoaDon hdForm = getFormHD();
        HoaDon hdUpate = new HoaDon(idHD, tongTienTuTableKhiChonSP());
        if (checkTableRong) {
            hddao.insert(hdForm);
        } else {
            hddao.updateTongTien(hdUpate);

        }

        idHD = idHoaDon();

        ChiTietHoaDon cthd = new ChiTietHoaDon();
        cthd.setMaHD(idHD);
        cthd.setMaSP(sp.getMaSP());
        cthd.setSoLuong(Integer.valueOf(txtSoLuong.getText()));
        cthd.setGhiChu(txtGhiChu.getText());
        cthd.setTongTienSP(sp.getGia() * (Integer.valueOf(txtSoLuong.getText())));

        cthddao.insert(cthd);

    }

    private int idHoaDon() {
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        List<HoaDon> hd = hddao.selectAll();
        for (HoaDon hoaDon : hd) {
            if (hoaDon.getMaBan().equals(b.getMaBan())) {
                if (!hoaDon.isTrangThai()) {
                    return hoaDon.getMaHD();
                }
            }
        }
        return -1;
    }

    private void updateBanKhiOrderVaTT() {
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        b.setMaBan(b.getMaBan());
        b.setTenBan(b.getTenBan());
        b.setKhuVuc(b.getKhuVuc());
        if (thoiGianTT == -1) {
            b.setTrangThai("Có khách");
        } else {
            b.setTrangThai("Trống");
        }

        bdao.update(b);
        fillBan(b.getKhuVuc());
    }

    private HoaDon getFormHD() {
        HoaDon hd = new HoaDon();

        hd.setNgayDatBan(null);

        Date now = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String ngayTT = sdf.format(now);
        LocalTime time = LocalTime.now();
        System.out.println(thoiGianTT);
        if (thoiGianTT == -1) {
            hd.setNgayThanhToan(null);
            hd.setNgayThanhToan(null);
            hd.setTrangThai(false);
            hd.setThoiGianTaoHD(time.getHour() + ":" + time.getMinute() + ":" + time.getSecond());
        } else if (thoiGianTT == 1) {
            hd.setMaHD(idHoaDon());
            hd.setNgayThanhToan(XDate.toDate(ngayTT, "yyyy-MM-dd"));
            hd.setThoiGianThanhToan(time.getHour() + ":" + time.getMinute() + ":" + time.getSecond());
            hd.setTrangThai(true);
            hd.setThoiGianTaoHD(lblGioiDen.getText());

        }

        hd.setTongTien(tongTienTuTableKhiChonSP());
        hd.setMaNV(Auth.user.getMaNV());
       // hd.setMaNV("nghiatv");
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        hd.setMaBan(b.getMaBan());
        hd.setMaKH(null);
        return hd;
    }

    private void fillTableKhiOrder() {
        int soLuong = 0;
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        ChiTietHoaDon cthd = new ChiTietHoaDon();
        cthd.setMaHD(0);
        cthd.setMaCTHD(0);
        SanPham sp = spdao.selectByTenSPTraveMaSP(tenSP);
        cthd.setMaSP(sp.getMaSP());
        
        cthd.setSoLuong(Integer.valueOf(txtSoLuong.getText()));
        cthd.setGhiChu(txtGhiChu.getText());
        cthd.setTongTienSP(Integer.valueOf(txtSoLuong.getText()) * sp.getGia());
        for(int i=0;i<tblHoaDon.getRowCount();i++){
            String maSP = (String) tblHoaDon.getValueAt(i, 0);
            if(maSP.equals(sp.getMaSP())){
                
            }
        }

        listCTHD.add(cthd);
        
        for (ChiTietHoaDon chiTietHD : listCTHD) {
            SanPham splist = spdao.selectByMaSPTraVeTenSP(chiTietHD.getMaSP());
            model.addRow(new Object[]{chiTietHD.getMaSP(), splist.getTenSP(), chiTietHD.getSoLuong(), splist.getGia(), chiTietHD.getTongTienSP()});
        }
    }

    Double tongTien() {
        double tt = 0;
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        List<ChiTietHoaDon> list = cthddao.selectByMaBan(b.getMaBan());
        for (int i = 0; i < list.size(); i++) {
            tt += (Double) tblHoaDon.getValueAt(i, 4);
        }
        return tt;
    }

    Double tongTienTuTableKhiChonSP() {
        double tt = 0;
        int size = tblHoaDon.getRowCount();
        for (int i = 0; i < size; i++) {
            tt += (Double) tblHoaDon.getValueAt(i, 4);
        }
        return tt;
    }

    private void thanhToan() {
        if (MsgBox.confirm(this, "Bạn có muốn thanh toán cho " + tenBan)) {
            thoiGianTT = 1;
            checkFillDuoiTable = false;
            HoaDon hd = getFormHD();
            hddao.update(hd);
            updateBanKhiOrderVaTT();
            clickBan();
            fillTabel();
        }
    }

    private void chonChuyenBan() {
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        if (tenBan == null) {
            MsgBox.alert(null, "Vui lòng chọn bàn cần chuyển", JOptionPane.WARNING_MESSAGE);
        } else if (b.getTrangThai().equals("Trống") || b.getTrangThai().equals("Đã đặt")) {
            MsgBox.alert(null, "Vui lòng chọn bàn có khách để chuyển", JOptionPane.WARNING_MESSAGE);
        } else {
            dgChuyenBan = new JDialog();
            dgChuyenBan.setUndecorated(true);
            dgChuyenBan.setPreferredSize(new Dimension(500, 250));
            dgChuyenBan.setSize(500, 250);

            JPanel pannel = new JPanel();
            pannel.setLayout(null);
            pannel.setPreferredSize(new Dimension(500, 250));
            pannel.setSize(500, 250);
            pannel.setBackground(Color.WHITE);

            JLabel jLabelTen = new JLabel("Chọn bàn để chuyển");
            jLabelTen.setPreferredSize(new Dimension(500, 50));
            jLabelTen.setSize(500, 50);
            jLabelTen.setFont(new Font("Roboto", Font.PLAIN, 22));
            jLabelTen.setForeground(new Color(97, 67, 67));
            jLabelTen.setLocation(0, 10);
            jLabelTen.setHorizontalAlignment(SwingConstants.CENTER);
            jLabelTen.setVerticalAlignment(SwingConstants.CENTER);

            cboChuyenBan = new JComboBox();
            cboChuyenBan.setSize(300, 35);
            cboChuyenBan.setLocation(100, 70);

            for (Ban ban : listBan) {
                if (!tenBan.equals(ban.getTenBan())) {
                    cboChuyenBan.addItem(ban.getTenBan());
                }
            }

            btnOkChuyenBan = new JButton("OK");
            btnOkChuyenBan.setPreferredSize(new Dimension(150, 40));
            btnOkChuyenBan.setSize(150, 40);
            btnOkChuyenBan.setBackground(new Color(191, 158, 117));
            btnOkChuyenBan.setFont(new Font("Roboto", Font.BOLD, 20));
            btnOkChuyenBan.setForeground(new Color(255, 255, 255));
            btnOkChuyenBan.setLocation(95, 160);
            btnOkChuyenBan.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    btnOkChuyenBanActionPerformed(e);
                }
            });

            btnHuyChuyenBan = new JButton("Hủy");
            btnHuyChuyenBan.setPreferredSize(new Dimension(150, 40));
            btnHuyChuyenBan.setSize(150, 40);
            btnHuyChuyenBan.setBackground(new Color(191, 158, 117));
            btnHuyChuyenBan.setFont(new Font("Roboto", Font.BOLD, 20));
            btnHuyChuyenBan.setForeground(new Color(255, 255, 255));
            btnHuyChuyenBan.setLocation(255, 160);
            btnHuyChuyenBan.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    dgChuyenBan.setVisible(false);
                }
            });

            pannel.add(jLabelTen);
            pannel.add(cboChuyenBan);
            pannel.add(btnOkChuyenBan);
            pannel.add(btnHuyChuyenBan);
            dgChuyenBan.add(pannel);
            dgChuyenBan.setVisible(true);
            dgChuyenBan.setLocationRelativeTo(null);
        }
    }

    private void chuyenBanNhanOk() {
        String tenBanDuocChuyen = (String) cboChuyenBan.getSelectedItem();
        Ban b = updateBanTrong();
        bdao.update(b);

        Ban banDuocChuyen = bdao.selectByTenBanTraVeBan(tenBanDuocChuyen);
        banDuocChuyen.setMaBan(banDuocChuyen.getMaBan());
        banDuocChuyen.setTenBan(banDuocChuyen.getTenBan());
        banDuocChuyen.setKhuVuc(banDuocChuyen.getKhuVuc());
        banDuocChuyen.setTrangThai("Có khách");
        bdao.update(banDuocChuyen);

        HoaDon hd = new HoaDon(idHoaDon(), banDuocChuyen.getMaBan());
        hddao.updateMaBanCuaHD(hd);
        System.out.println(idHoaDon() + "|" + banDuocChuyen.getMaBan());

        fillBan(b.getKhuVuc());
        fillTabel();
        clickBan();
    }
    
    private void chonGopBan() {
        Ban b = bdao.selectByTenBanTraVeBan(tenBan);
        if (tenBan == null) {
            MsgBox.alert(null, "Vui lòng chọn bàn cần gộp", JOptionPane.WARNING_MESSAGE);
        } else if (b.getTrangThai().equals("Trống") || b.getTrangThai().equals("Đã đặt")) {
            MsgBox.alert(null, "Vui lòng chọn bàn có khách để gộp", JOptionPane.WARNING_MESSAGE);
        } else {
            dgGopBan = new JDialog();
            dgGopBan.setUndecorated(true);
            dgGopBan.setPreferredSize(new Dimension(500, 250));
            dgGopBan.setSize(500, 250);

            JPanel pannel = new JPanel();
            pannel.setLayout(null);
            pannel.setPreferredSize(new Dimension(500, 250));
            pannel.setSize(500, 250);
            pannel.setBackground(Color.WHITE);
           
            JLabel jLabelTen = new JLabel("Chọn bàn để Gộp");
            jLabelTen.setPreferredSize(new Dimension(500, 50));
            jLabelTen.setSize(500, 50);
            jLabelTen.setFont(new Font("Roboto", Font.PLAIN, 22));
            jLabelTen.setForeground(new Color(97, 67, 67));
            jLabelTen.setLocation(0, 10);
            jLabelTen.setHorizontalAlignment(SwingConstants.CENTER);
            jLabelTen.setVerticalAlignment(SwingConstants.CENTER);

            cboGopBan = new JComboBox();
            cboGopBan.setSize(300, 35);
            cboGopBan.setLocation(100, 70);

            listBan = bdao.selectAll();
            for (Ban ban : listBan) {
                if (!tenBan.equals(ban.getTenBan())) {
                    if(ban.getTrangThai().equals("Có khách")){
                        cboGopBan.addItem(ban.getTenBan());
                    } 
                }
            }

            btnOkGopBan = new JButton("OK");
            btnOkGopBan.setPreferredSize(new Dimension(150, 40));
            btnOkGopBan.setSize(150, 40);
            btnOkGopBan.setBackground(new Color(191, 158, 117));
            btnOkGopBan.setFont(new Font("Roboto", Font.BOLD, 20));
            btnOkGopBan.setForeground(new Color(255, 255, 255));
            btnOkGopBan.setLocation(95, 160);
            btnOkGopBan.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    btnOkGopBanActionPerformed(e);
                }
            });

            btnHuyGopBan = new JButton("Hủy");
            btnHuyGopBan.setPreferredSize(new Dimension(150, 40));
            btnHuyGopBan.setSize(150, 40);
            btnHuyGopBan.setBackground(new Color(191, 158, 117));
            btnHuyGopBan.setFont(new Font("Roboto", Font.BOLD, 20));
            btnHuyGopBan.setForeground(new Color(255, 255, 255));
            btnHuyGopBan.setLocation(255, 160);
            btnHuyGopBan.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    dgGopBan.setVisible(false);
                }
            });

            pannel.add(jLabelTen);
            pannel.add(cboGopBan);
            pannel.add(btnOkGopBan);
            pannel.add(btnHuyGopBan);
            dgGopBan.add(pannel);
            dgGopBan.setVisible(true);
            dgGopBan.setLocationRelativeTo(null);
        }
    }
    
    private void gopBanNhanOK(){ 
        String tenBanDuocGop = (String) cboGopBan.getSelectedItem();
        Ban bGopPhu = bdao.selectByTenBanTraVeBan(tenBanDuocGop);
        List<ChiTietHoaDon> cthdGop = cthddao.selectByMaBan(bGopPhu.getMaBan());
        int idhd = idHoaDon();
        System.out.println(idHoaDon());
        for (ChiTietHoaDon cthdG : cthdGop) {
            ChiTietHoaDon cthd = new ChiTietHoaDon();
            cthd.setMaCTHD(Integer.valueOf(cthdG.getMaCTHD()));
            cthd.setMaHD(idhd);
            cthd.setMaSP(cthdG.getMaSP());
            cthd.setSoLuong(cthdG.getSoLuong());
            cthd.setTongTienSP(cthdG.getTongTienSP());
            cthd.setGhiChu(cthdG.getGhiChu());
            System.out.println(cthd.getMaHD());
            cthddao.update(cthd);
        }
        
        Ban bUpdae = new Ban(bGopPhu.getMaBan(), bGopPhu.getTenBan(), "Trống", bGopPhu.getKhuVuc());
        bdao.update(bUpdae);
        
        Ban bGopChinh = bdao.selectByTenBanTraVeBan(tenBan);
        fillBan(bGopChinh.getKhuVuc());
        fillTabel();
        clickBan();
    }
    
    
}
