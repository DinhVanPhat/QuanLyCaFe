/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.cafe.form;

import com.cafe.dao.SanPhamDAO;
import com.cafe.model.SanPham;
import com.cafe.utils.Auth;
import com.cafe.utils.MsgBox;
import com.cafe.utils.XImage;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.File;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NGHIA
 */
public class SanPhamJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SanPhamJPanel
     */
    public SanPhamJPanel() {
        initComponents();
        init();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtLoaiSP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGioiThieu = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtKhoangGiaNho = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtKhoangGiaLon = new javax.swing.JTextField();
        btnLoc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1536, 864));

        jPanel1.setBackground(new java.awt.Color(230, 213, 193));
        jPanel1.setPreferredSize(new java.awt.Dimension(1536, 864));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(97, 67, 67));
        jLabel11.setText("THÔNG TIN SẢN PHẨM");

        jPanel2.setBackground(new java.awt.Color(230, 213, 193));

        lblHinhAnh.setForeground(new java.awt.Color(0, 0, 0));
        lblHinhAnh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(97, 67, 67));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Hình Ảnh *");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(97, 67, 67));
        jLabel2.setText("Mã Sản Phẩm *");

        txtMaSP.setForeground(new java.awt.Color(0, 0, 0));
        txtMaSP.setMinimumSize(new java.awt.Dimension(64, 30));
        txtMaSP.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(97, 67, 67));
        jLabel3.setText("Loại Sản Phẩm *");

        txtLoaiSP.setForeground(new java.awt.Color(0, 0, 0));
        txtLoaiSP.setMinimumSize(new java.awt.Dimension(64, 30));
        txtLoaiSP.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(97, 67, 67));
        jLabel5.setText("Giới Thiệu ");

        txtGioiThieu.setForeground(new java.awt.Color(0, 0, 0));
        txtGioiThieu.setMinimumSize(new java.awt.Dimension(64, 30));
        txtGioiThieu.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(97, 67, 67));
        jLabel4.setText("Tên Sản Phẩm *");

        txtTenSP.setForeground(new java.awt.Color(0, 0, 0));
        txtTenSP.setMinimumSize(new java.awt.Dimension(64, 30));
        txtTenSP.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(97, 67, 67));
        jLabel8.setText("Đơn Giá *");

        txtDonGia.setForeground(new java.awt.Color(0, 0, 0));
        txtDonGia.setMinimumSize(new java.awt.Dimension(64, 30));
        txtDonGia.setPreferredSize(new java.awt.Dimension(64, 28));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(txtLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(84, 84, 84)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGioiThieu, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addComponent(jLabel3)
                        .addComponent(jLabel2))
                    .addGap(84, 84, 84)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel3)
                                    .addGap(58, 58, 58))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtGioiThieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(144, 144, 144)))
        );

        txtTimKiem.setForeground(new java.awt.Color(0, 0, 0));
        txtTimKiem.setMinimumSize(new java.awt.Dimension(64, 30));
        txtTimKiem.setPreferredSize(new java.awt.Dimension(64, 40));

        btnTimKiem.setBackground(new java.awt.Color(191, 158, 117));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/search.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(191, 158, 117));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(191, 158, 117));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/update.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(191, 158, 117));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(191, 158, 117));
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/lammoi.png"))); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(97, 67, 67));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("QUẢN LÝ SẢN PHẨM");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(97, 67, 67));
        jLabel12.setText("Khoảng Giá");

        txtKhoangGiaNho.setForeground(new java.awt.Color(0, 0, 0));

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("----");

        txtKhoangGiaLon.setForeground(new java.awt.Color(0, 0, 0));

        btnLoc.setBackground(new java.awt.Color(191, 158, 117));
        btnLoc.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnLoc.setForeground(new java.awt.Color(255, 255, 255));
        btnLoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/icon/product-release.png"))); // NOI18N
        btnLoc.setText("Lọc");
        btnLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocActionPerformed(evt);
            }
        });

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Giá", "Giới thiệu"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKhoangGiaNho, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtKhoangGiaLon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKhoangGiaLon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKhoangGiaNho, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents

    private void lblHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        if (evt.getClickCount() == 1) {
            this.chonAnh();
        }
    }//GEN-LAST:event_lblHinhAnhMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        timKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String src = evt.getActionCommand();
        if (src.equalsIgnoreCase("Thêm")) {
            insert();
        } else if (src.equalsIgnoreCase("Lưu")) {
            update();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (row != -1) {
            row = -1;
            updateStatus();
            btnThem.setText("Lưu");
            txtMaSP.setEditable(false);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocActionPerformed
        locSP();
    }//GEN-LAST:event_btnLocActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblSanPham.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked
                                        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLoc;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtGioiThieu;
    private javax.swing.JTextField txtKhoangGiaLon;
    private javax.swing.JTextField txtKhoangGiaNho;
    private javax.swing.JTextField txtLoaiSP;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
      
    SanPhamDAO spdao = new SanPhamDAO();
    int row = -1;
 
    
    private void init() {
        this.fillTable();
        this.row = -1;
        this.updateStatus();
        
        setBorderInput();
        focusInput();
    }

    void insert() {
        if (checkValidateForm()) {
            if (!spdao.chechTrungMa(txtMaSP.getText())) {
                MsgBox.alert(this, "Mã sản phẩm đã tồn tại",javax.swing.JOptionPane.WARNING_MESSAGE);
            } else {
                SanPham sp = getForm();
                try {
                    spdao.insert(sp);
                    this.fillTable();
                    this.clearForm();
                    MsgBox.alert(this, "Thêm mới thành công!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    //throw new RuntimeException(e);
                    MsgBox.alert(this, "Thêm mới thất bại",javax.swing.JOptionPane.WARNING_MESSAGE);
                }
            }
        }

    }

    void update() {
        if (checkValidateForm()) {
            SanPham sp = getForm();
            try {
                spdao.update(sp);
                this.fillTable();
                MsgBox.alert(this, "Cập nhật thành công!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                this.clearForm();
            } catch (Exception e) {
                //throw new RuntimeException(e);
                e.printStackTrace();
               MsgBox.alert(this, "Cập nhật thất bại",javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa sản phẩm!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else    if (MsgBox.confirm(this, "Bạn thực sự muốn xóa sản phẩm này?")) {
            String maNV = txtMaSP.getText();
            try {
                spdao.delete(maNV);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                //throw new RuntimeException(e);
                MsgBox.alert(this, "Xóa thất bại",javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    void clearForm() {
        SanPham sp = new SanPham();
        this.setForm(sp);
        this.row = -1;
        this.updateStatus();
        tblSanPham.clearSelection();
        txtDonGia.setText("");
        lblHinhAnh.setIcon(null);

    }

    void edit() {
        String manv = (String) tblSanPham.getValueAt(this.row, 0);
        SanPham sp = spdao.selectById(manv);
        this.setForm(sp);
        this.updateStatus();
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        try {
            String keyWord = txtTimKiem.getText();
            List<SanPham> list = spdao.selectByKeyWord(keyWord);
            for (SanPham sp : list) {
                Object[] row = {sp.getMaSP(), sp.getTenSP(), sp.getLoaiSP(), sp.getGia(), sp.getGioiThieu()};
                model.addRow(row);
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
            // MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    
    void chonAnh() {
        if (FileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File file = FileChooser.getSelectedFile();
                XImage.save(file);
                ImageIcon icon = XImage.read(file.getName());
                Image img = ImageIO.read(file);
                lblHinhAnh.setIcon(new ImageIcon(img.getScaledInstance(230, 220, Image.SCALE_DEFAULT)));
                lblHinhAnh.setToolTipText(file.getName());
            } catch (Exception e) {
                throw new RuntimeException();
            }
        }
    }

    void setForm(SanPham sp) {
        txtMaSP.setText(sp.getMaSP());
        txtTenSP.setText(sp.getTenSP());
        txtLoaiSP.setText(sp.getLoaiSP());
        txtDonGia.setText(sp.getGia()+ "");
        txtGioiThieu.setText(sp.getGioiThieu());
        if (sp.getHinhAnh() != null) {
            ImageIcon imageIcon = XImage.read(sp.getHinhAnh());
            Image image = imageIcon.getImage();
            lblHinhAnh.setToolTipText(sp.getHinhAnh());
            lblHinhAnh.setIcon(XImage.read(sp.getHinhAnh()));
            //set kích thước ảnh
            int width = 230; // Đặt chiều rộng mong muốn
            int height = 220; // Đặt chiều cao mong muốn
            Image resizedImage = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
            imageIcon.setImage(resizedImage);
            lblHinhAnh.setIcon(imageIcon);
        }
    }

    SanPham getForm() {
        SanPham sp = new SanPham();
        sp.setMaSP(txtMaSP.getText());
        sp.setTenSP(txtTenSP.getText());
        sp.setLoaiSP(txtLoaiSP.getText());
        sp.setGia(Double.valueOf(txtDonGia.getText()));
        sp.setGioiThieu(txtGioiThieu.getText());
        sp.setHinhAnh(lblHinhAnh.getToolTipText());
        return sp;
    }


    void updateStatus() {
        boolean edit = (this.row >= 0);
        //Trạng thái form
        txtMaSP.setEditable(!edit);
        txtTenSP.setEditable(!edit);
        txtLoaiSP.setEditable(!edit);
        txtTenSP.setEditable(!edit);
        txtDonGia.setEditable(!edit);
        txtGioiThieu.setEditable(!edit);

        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnThem.setText("Thêm");

    }

    boolean checkValidateForm() {
        if(lblHinhAnh.getToolTipText() == null){
            MsgBox.alert(this, "Vui lòng chọn hình ảnh!",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtMaSP.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập mã sản phẩm!",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }
        String patternMaNV = "^SP\\d+";
        if (!txtMaSP.getText().matches(patternMaNV)) {
            MsgBox.alert(this, "Sai mã sản phẩm!\n Ví dụ:  SP*** . \n* là các số",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtTenSP.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập tên sản phẩm!",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if (txtLoaiSP.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập loại sản phẩm!",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }

        if (txtDonGia.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập đơn giá!",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }
        try {
            long sdt = Long.parseLong(txtDonGia.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Đơn giá phải là số!",javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    private void timKiem() {
        this.fillTable();
        this.clearForm();
        this.row = -1;
        updateStatus();
    }
    void locSP() {
        if (checkKhoangGia()) {
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            model.setRowCount(0);
            String giaNho = txtKhoangGiaNho.getText();
            String giaLon = txtKhoangGiaLon.getText();
            try {
                List<SanPham> list = spdao.locGiaSP(giaNho, giaLon);
                for (SanPham sp : list) {
                    Object[] row = {sp.getMaSP(), sp.getTenSP(), sp.getLoaiSP(), sp.getGia(), sp.getGioiThieu()};
                    model.addRow(row);
                }
            } catch (Exception e) {
                MsgBox.alert(this, "Lỗi truy vấn dữ liệu!",JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    boolean checkKhoangGia() {
        if (txtKhoangGiaNho.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập khoảng giá nhỏ",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        String patternGN = ".*[a-zA-Z].*";
        if (txtKhoangGiaNho.getText().matches(patternGN)) {
            MsgBox.alert(this, "Khoảng giá nhỏ phải là số",JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (Integer.valueOf(txtKhoangGiaNho.getText()) < 0) {
            MsgBox.alert(this, "Khoảng giá nhỏ phải lớn hơn 0",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtKhoangGiaLon.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập khoảng giá lớn",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        String patternGL = ".*[a-zA-Z].*";
        if (txtKhoangGiaLon.getText().matches(patternGL)) {
            MsgBox.alert(this, "Khoảng giá lớn phải là số",JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (Integer.valueOf(txtKhoangGiaLon.getText()) < 0) {
            MsgBox.alert(this, "Khoảng giá lớn phải lớn hơn 0",JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }
    
     private void focusInput(){
        Border borderNhanVao = BorderFactory.createLineBorder(new Color(227, 188, 140), 10, true);
        Border borderKhongNhan = BorderFactory.createLineBorder(new Color(255, 255, 255), 10, true);
        txtMaSP.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtMaSP.setBackground(new Color(227, 188, 140));
                txtMaSP.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtMaSP.setBackground(new Color(255, 255, 255));
                txtMaSP.setBorder(borderKhongNhan);
            }
        });
        txtTenSP.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtTenSP.setBackground(new Color(227, 188, 140));
                txtTenSP.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtTenSP.setBackground(new Color(255, 255, 255));
                txtTenSP.setBorder(borderKhongNhan);
            }
        });
        txtLoaiSP.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtLoaiSP.setBackground(new Color(227, 188, 140));
                txtLoaiSP.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtLoaiSP.setBackground(new Color(255, 255, 255));
                txtLoaiSP.setBorder(borderKhongNhan);
            }
        });
        txtDonGia.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtDonGia.setBackground(new Color(227, 188, 140));
                txtDonGia.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtDonGia.setBackground(new Color(255, 255, 255));
                txtDonGia.setBorder(borderKhongNhan);
            }
        });
        txtGioiThieu.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtGioiThieu.setBackground(new Color(227, 188, 140));
                txtGioiThieu.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtGioiThieu.setBackground(new Color(255, 255, 255));
                txtGioiThieu.setBorder(borderKhongNhan);
            }
        });
        txtKhoangGiaLon.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtKhoangGiaLon.setBackground(new Color(227, 188, 140));
                txtKhoangGiaLon.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtKhoangGiaLon.setBackground(new Color(255, 255, 255));
                txtKhoangGiaLon.setBorder(borderKhongNhan);
            }
        });
        txtKhoangGiaNho.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtKhoangGiaNho.setBackground(new Color(227, 188, 140));
                txtKhoangGiaNho.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtKhoangGiaNho.setBackground(new Color(255, 255, 255));
                txtKhoangGiaNho.setBorder(borderKhongNhan);
            }
        });
        txtTimKiem.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtTimKiem.setBackground(new Color(227, 188, 140));
                txtTimKiem.setBorder(borderNhanVao);  
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtTimKiem.setBackground(new Color(255, 255, 255));
                txtTimKiem.setBorder(borderKhongNhan);
            }
        });
    }
    
    private void setBorderInput(){
        Border border = BorderFactory.createLineBorder(new Color(255, 255, 255), 10, true);
        txtMaSP.setBorder(border);
        txtDonGia.setBorder(border);
        txtGioiThieu.setBorder(border);
        txtKhoangGiaLon.setBorder(border);
        txtTenSP.setBorder(border);
         txtKhoangGiaNho.setBorder(border);
          txtLoaiSP.setBorder(border);
        txtTimKiem.setBorder(border);
    }

}
